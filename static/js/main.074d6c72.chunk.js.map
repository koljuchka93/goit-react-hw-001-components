{"version":3,"sources":["components/Profile/profile.module.css","components/FriendList/friendlist.module.css","components/Statistics/statistics.module.css","components/Transaction/transaction.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendList.js","components/Transaction/Transaction.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","class","styles","profile","description","src","alt","className","label","quantity","followers","views","likes","Statistics","title","statistics","stat_list","map","stat","item","percentage","id","FriendsList","friends","friends_list","friend","isOnline","statusOnline","statusOffline","width","TransactionHistory","transaction","transaction_history","type","amount","currency","App","user","username","data","Transaction","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.074d6c72.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__2cbET\",\"description\":\"profile_description__3eQ58\",\"avatar\":\"profile_avatar__29G_p\",\"name\":\"profile_name__1KU_X\",\"tag\":\"profile_tag__2H5qY\",\"location\":\"profile_location__3qDaF\",\"stats\":\"profile_stats__3_tTy\",\"label\":\"profile_label__329g6\",\"quantity\":\"profile_quantity__36i4u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends_list\":\"friendlist_friends_list__1jLEH\",\"item\":\"friendlist_item__-pufG\",\"statusOnline\":\"friendlist_statusOnline__ubZP-\",\"statusOffline\":\"friendlist_statusOffline__2MHGN\",\"avatar\":\"friendlist_avatar__3apCF\",\"name\":\"friendlist_name__2QylL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistics_statistics__YiQ2v\",\"title\":\"statistics_title__3kzDB\",\"stat_list\":\"statistics_stat_list__GdyRj\",\"item\":\"statistics_item__1zTHs\",\"label\":\"statistics_label__yt0XV\",\"percentage\":\"statistics_percentage__3DYxa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"transaction_transaction_history__2NHPx\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './profile.module.css';\r\n\r\n// Profile {\r\n//     username = { user.username };\r\n//     tag = { user.tag };\r\n//     location = { user.location };\r\n//     avatar = { user.avatar };\r\n//     stats = { user.stats };\r\n// }\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats}) => (\r\n    <div class={styles.profile}>\r\n        <div class={styles.description}>\r\n        <img src={avatar} alt=\"user avatar\" className={styles.avatar} />\r\n        <p className={styles.name}>{name}</p>\r\n        <p className={styles.tag}>@{tag}</p>\r\n        <p className={styles.location}>{location}</p>\r\n    </div>\r\n\r\n    <ul className={styles.stats}>\r\n        <li>\r\n            <span className={styles.label}>Followers</span>\r\n        <span className={styles.quantity}>{stats.followers}</span>\r\n        </li>\r\n        <li>\r\n            <span className={styles.label}>Views</span>\r\n        <span className={styles.quantity}>{stats.views}</span>\r\n        </li>\r\n        <li>\r\n            <span className={styles.label}>Likes</span>\r\n        <span className={styles.quantity}>{stats.likes}</span>\r\n        </li>\r\n    </ul>\r\n    </div>\r\n);\r\n\r\nProfile.propTypes = {\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './statistics.module.css';\r\n\r\nconst Statistics = ({ title, stats }) => (\r\n    <section className={styles.statistics}>\r\n    {title && <h2 className=\"title\">{title}</h2>}\r\n        <ul className={styles.stat_list}>\r\n            {stats.map(stat => (\r\n                <li className={styles.item} key={stat.id}>\r\n                    <span className={styles.label}>{stat.label}</span>\r\n                    <span className={styles.percentage}>{stat.percentage}%</span>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    </section>\r\n);\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            label: PropTypes.string.isRequired,\r\n            percentage: PropTypes.number.isRequired\r\n        })\r\n    )\r\n}\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './friendlist.module.css';\r\n\r\nconst FriendsList = ({ friends }) => (\r\n        <ul className={styles.friends_list}>\r\n            {friends.map(friend => (\r\n                <li className={styles.item} key={friend.id}>\r\n                    <span className={friend.isOnline ? styles.statusOnline : styles.statusOffline}></span>\r\n                    <img className={styles.avatar} src={friend.avatar} alt=\"User avatar\" width=\"48\" />\r\n                    <p className={styles.name}>{friend.name}</p>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n);\r\n\r\nFriendsList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default FriendsList","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './transaction.module.css';\r\n\r\nconst TransactionHistory = ({ transaction }) => (\r\n  <table class={styles.transaction_history}>\r\n    <thead>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      {transaction.map(item => (\r\n        <tr key={item.id}>\r\n          <td>{item.type}</td>\r\n          <td>{item.amount}</td>\r\n          <td>{item.currency}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  transaction: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;","import React from 'react';\n\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics'\nimport FriendsList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/Transaction/Transaction';\n\nimport user from './components/Profile/user.json';\nimport data from './components/Statistics/data.json'\nimport friends from './components/FriendList/friendlist.json'\nimport transaction from './components/Transaction/transactions.json'\n\nconst App = () => (\n  <>\n    <Profile\n      name={user.username}\n      tag={user.tag}\n      location={user.location}\n      avatar={user.avatar}\n      stats={user.stats}\n    />\n    <Statistics title=\"Upload stats\" stats={data} />\n    <FriendsList friends={friends} />\n    <TransactionHistory transaction={transaction} />\n  </>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}